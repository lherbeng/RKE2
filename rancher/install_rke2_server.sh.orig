#!/bin/bash

# Stop Firewall
systemctl disable --now ufw

# Run updates and upgrade and install packages
apt update
apt install nfs-common open-iscsi -y
apt upgrade -y

# Automatic removal of unnecessary packages
apt autoremove -y

# Install RKE2 server
curl -sfL https://get.rke2.io | INSTALL_RKE2_TYPE=server sh -

# For specific RKE2 Server version
# curl -sfL https://get.rke2.io | INSTALL_RKE2_CHANNEL=v1.26 INSTALL_RKE2_TYPE=server sh -

# Enable and start RKE2 Server service
systemctl enable rke2-server.service
systemctl start rke2-server.service

# Check if RKE2 Service is running (non-blocking)
if systemctl is-active --quiet rke2-server.service; then
            echo "RKE2 Server is running."
    else
                echo "RKE2 Server is not running."
fi

# Simlink all the things - kubectl
# sudo ln -s /var/lib/rancher/rke2/data/v1.28.12-rke2r1-aa38cd526ddb/bin/kubectl /usr/local/bin/kubectl

# Download the latest stable version of kubectl
curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"

# Move kubectl to /usr/local/bin and make it executable
sudo mv kubectl /usr/local/bin/kubectl
sudo chmod +x /usr/local/bin/kubectl

# Add kubectl conf
export KUBECONFIG=/etc/rancher/rke2/rke2.yaml

# Append export KUBECONFIG to .bashrc
echo 'export KUBECONFIG=/etc/rancher/rke2/rke2.yaml' >> ~/.bashrc

# Apply the changes to the current shell session
. ~/.bashrc

# check if kubectl works
kubectl get node -o wide

# Get server IP address Of RKE2 Server
ip addr | grep inet

# Get Server token and copy it somewhere
cat /var/lib/rancher/rke2/server/node-token
