pipeline {
    agent { label 'agent1' }  // Specify the Jenkins node label here

    environment {
        REPO_URL = 'https://github.com/lherbeng/RKE2.git'  // Replace with your actual repo
        SCRIPT_PATH = 'rancher/install_rke2_server.sh'
        KUBECONFIG = '/etc/rancher/rke2/rke2.yaml'  // Explicitly define the KUBECONFIG for kubectl
    }

    stages {
        stage('Checkout') {
            steps {
                // Checkout the code from GitHub
                git url: "${REPO_URL}", branch: 'main'
            }
        }

        stage('Install RKE2 Server') {
            steps {
                // Provide execution permission to the script
                sh "chmod +x ${SCRIPT_PATH}"
                
                // Run the installation script
                sh "./${SCRIPT_PATH}"
            }
        }

        stage('Wait for RKE2 to Start') {
            steps {
                script {
                    // Wait for 30 seconds to ensure the RKE2 server is fully up
                    echo "Waiting for RKE2 to fully start..."
                    sleep 30
                }
            }
        }

        stage('Check RKE2 Server Status') {
            steps {
                // Check if the RKE2 server service is running
                sh 'systemctl status rke2-server.service || echo "RKE2 server is not running."'
            }
        }

        stage('Verify RKE2 Installation') {
            steps {
                // Explicitly verify that kubectl is using the correct KUBECONFIG and RKE2 is operational
                sh "kubectl --kubeconfig=${KUBECONFIG} get node -o wide || echo 'kubectl not found or RKE2 server is not running.'"
            }
        }
        
        // Add a new stage to verify KUBECONFIG file and node status
        stage('Validate kubectl Configuration') {
            steps {
                // Check if the KUBECONFIG file exists and has correct permissions
                sh 'ls -l /etc/rancher/rke2/rke2.yaml || echo "KUBECONFIG file not found or not accessible."'
                
                // Validate if the node is ready and if kubectl can connect
                sh "kubectl --kubeconfig=${KUBECONFIG} get nodes || echo 'Unable to get nodes. Check KUBECONFIG and RKE2 status.'"
            }
        }
    }

    post {
        success {
            echo 'RKE2 Server installed successfully!'
        }
        failure {
            echo 'RKE2 Server installation failed.'
        }
    }
}
